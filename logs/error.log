2025-06-10T13:12:36.656976-0500 | ERROR | ‚ùå Error while applying to Sdet Jobs, Employment in Chicago, IL | Indeed: Expecting value: line 1 column 1 (char 0)
2025-06-10T17:20:28.103679-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T17:20:46.641345-0500 | ERROR | ‚ùå Health check database error: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T17:51:43.648613-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T17:52:03.988613-0500 | ERROR | ‚ùå FAILED: Resume processing (0.551s)
2025-06-10T17:52:03.989616-0500 | ERROR |    üí• Error: Error code: 401 - {'error': {'message': 'Incorrect API key provided: your_ope********here. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-06-10T17:52:03.990471-0500 | ERROR | ‚ùå FAILED app.tasks.pipeline.run_pipeline
2025-06-10T17:52:03.990528-0500 | ERROR |    ‚è±Ô∏è Time: 0.554s
2025-06-10T17:52:03.990576-0500 | ERROR |    üí• Error: "'error'"
2025-06-10T17:52:03.996136-0500 | ERROR |    üìö Stack trace:
Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/tasks/pipeline.py", line 312, in run_pipeline
    embedding = embed_resume_text(raw_text)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/services/resume_parser.py", line 33, in embed_resume_text
    response = client.embeddings.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/resources/embeddings.py", line 129, in create
    return self._post(
           ^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/_base_client.py", line 1242, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/_base_client.py", line 1037, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: your_ope********here. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/utils/debug_utils.py", line 129, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/tasks/pipeline.py", line 547, in run_pipeline
    logger.error(f"‚ùå Pipeline failed: {str(e)}", exc_info=True)
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/loguru/_logger.py", line 2090, in error
    __self._log("ERROR", False, __self._options, __message, args, kwargs)
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/loguru/_logger.py", line 2055, in _log
    log_record["message"] = message.format(*args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyError: "'error'"

2025-06-10T17:52:03.997134-0500 | ERROR | ‚ùå HTTP ERROR: POST /api/v1/pipeline/start
2025-06-10T17:52:03.997256-0500 | ERROR |    ‚è±Ô∏è Time: 0.563s
2025-06-10T17:52:03.997315-0500 | ERROR |    üí• Error: "'error'"
2025-06-10T17:52:03.997373-0500 | ERROR |    üÜî Checkpoint: checkpoint_175203433
2025-06-10T18:42:34.825569-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T18:42:45.502493-0500 | ERROR | ‚ùå FAILED: Resume processing (0.359s)
2025-06-10T18:42:45.502924-0500 | ERROR |    üí• Error: Error code: 401 - {'error': {'message': 'Incorrect API key provided: your_ope********here. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-06-10T18:42:45.504184-0500 | ERROR | ‚ùå FAILED app.tasks.pipeline.run_pipeline
2025-06-10T18:42:45.504259-0500 | ERROR |    ‚è±Ô∏è Time: 0.362s
2025-06-10T18:42:45.504334-0500 | ERROR |    üí• Error: "'error'"
2025-06-10T18:42:45.511540-0500 | ERROR |    üìö Stack trace:
Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/tasks/pipeline.py", line 312, in run_pipeline
    embedding = embed_resume_text(raw_text)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/services/resume_parser.py", line 33, in embed_resume_text
    response = client.embeddings.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/resources/embeddings.py", line 129, in create
    return self._post(
           ^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/_base_client.py", line 1242, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/_base_client.py", line 1037, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: your_ope********here. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/utils/debug_utils.py", line 129, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/tasks/pipeline.py", line 547, in run_pipeline
    logger.error(f"‚ùå Pipeline failed: {str(e)}", exc_info=True)
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/loguru/_logger.py", line 2090, in error
    __self._log("ERROR", False, __self._options, __message, args, kwargs)
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/loguru/_logger.py", line 2055, in _log
    log_record["message"] = message.format(*args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyError: "'error'"

2025-06-10T18:42:45.512502-0500 | ERROR | ‚ùå HTTP ERROR: POST /api/v1/pipeline/start
2025-06-10T18:42:45.512664-0500 | ERROR |    ‚è±Ô∏è Time: 0.373s
2025-06-10T18:42:45.512748-0500 | ERROR |    üí• Error: "'error'"
2025-06-10T18:42:45.512813-0500 | ERROR |    üÜî Checkpoint: checkpoint_184245139
2025-06-10T18:49:43.876104-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T18:49:51.726887-0500 | ERROR | ‚ùå FAILED: Resume processing (0.377s)
2025-06-10T18:49:51.727382-0500 | ERROR |    üí• Error: Error code: 401 - {'error': {'message': 'Incorrect API key provided: your_ope********here. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-06-10T18:49:51.728819-0500 | ERROR | ‚ùå FAILED app.tasks.pipeline.run_pipeline
2025-06-10T18:49:51.728909-0500 | ERROR |    ‚è±Ô∏è Time: 0.380s
2025-06-10T18:49:51.729014-0500 | ERROR |    üí• Error: "'error'"
2025-06-10T18:49:51.736528-0500 | ERROR |    üìö Stack trace:
Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/tasks/pipeline.py", line 312, in run_pipeline
    embedding = embed_resume_text(raw_text)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/services/resume_parser.py", line 33, in embed_resume_text
    response = client.embeddings.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/resources/embeddings.py", line 129, in create
    return self._post(
           ^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/_base_client.py", line 1242, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/_base_client.py", line 1037, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: your_ope********here. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/utils/debug_utils.py", line 129, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/tasks/pipeline.py", line 547, in run_pipeline
    logger.error(f"‚ùå Pipeline failed: {str(e)}", exc_info=True)
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/loguru/_logger.py", line 2090, in error
    __self._log("ERROR", False, __self._options, __message, args, kwargs)
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/loguru/_logger.py", line 2055, in _log
    log_record["message"] = message.format(*args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyError: "'error'"

2025-06-10T18:49:51.737676-0500 | ERROR | ‚ùå HTTP ERROR: POST /api/v1/pipeline/start
2025-06-10T18:49:51.737792-0500 | ERROR |    ‚è±Ô∏è Time: 0.390s
2025-06-10T18:49:51.737862-0500 | ERROR |    üí• Error: "'error'"
2025-06-10T18:49:51.737922-0500 | ERROR |    üÜî Checkpoint: checkpoint_184951347
2025-06-10T19:34:54.226089-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:34:57.825838-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:35:20.397214-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:35:23.783598-0500 | ERROR | ‚ùå FAILED: Resume processing (0.447s)
2025-06-10T19:35:23.783891-0500 | ERROR |    üí• Error: Error code: 401 - {'error': {'message': 'Incorrect API key provided: your_ope********here. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-06-10T19:35:23.784732-0500 | ERROR | ‚ùå FAILED app.tasks.pipeline.run_pipeline
2025-06-10T19:35:23.784784-0500 | ERROR |    ‚è±Ô∏è Time: 0.449s
2025-06-10T19:35:23.784830-0500 | ERROR |    üí• Error: "'error'"
2025-06-10T19:35:23.789979-0500 | ERROR |    üìö Stack trace:
Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/tasks/pipeline.py", line 312, in run_pipeline
    embedding = embed_resume_text(raw_text)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/services/resume_parser.py", line 33, in embed_resume_text
    response = client.embeddings.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/resources/embeddings.py", line 129, in create
    return self._post(
           ^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/_base_client.py", line 1242, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/_base_client.py", line 1037, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: your_ope********here. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/utils/debug_utils.py", line 129, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/tasks/pipeline.py", line 547, in run_pipeline
    logger.error(f"‚ùå Pipeline failed: {str(e)}", exc_info=True)
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/loguru/_logger.py", line 2090, in error
    __self._log("ERROR", False, __self._options, __message, args, kwargs)
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/loguru/_logger.py", line 2055, in _log
    log_record["message"] = message.format(*args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyError: "'error'"

2025-06-10T19:35:23.790866-0500 | ERROR | ‚ùå HTTP ERROR: POST /api/v1/pipeline/start
2025-06-10T19:35:23.790968-0500 | ERROR |    ‚è±Ô∏è Time: 0.457s
2025-06-10T19:35:23.791020-0500 | ERROR |    üí• Error: "'error'"
2025-06-10T19:35:23.791064-0500 | ERROR |    üÜî Checkpoint: checkpoint_193523333
2025-06-10T19:41:34.128392-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:41:35.918271-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:41:39.651970-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:41:41.040774-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:41:59.410207-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:42:02.940075-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:42:27.252958-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:42:31.288695-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:42:32.717759-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:42:34.142350-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:42:36.304795-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:43:07.109841-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:43:08.502623-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:43:14.986884-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:43:16.373443-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:44:38.317164-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:44:44.911650-0500 | ERROR | ‚ùå FAILED: Resume processing (0.379s)
2025-06-10T19:44:44.911913-0500 | ERROR |    üí• Error: Error code: 401 - {'error': {'message': 'Incorrect API key provided: your_ope********here. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-06-10T19:44:44.912702-0500 | ERROR | ‚ùå FAILED app.tasks.pipeline.run_pipeline
2025-06-10T19:44:44.912754-0500 | ERROR |    ‚è±Ô∏è Time: 0.381s
2025-06-10T19:44:44.912797-0500 | ERROR |    üí• Error: "'error'"
2025-06-10T19:44:44.917730-0500 | ERROR |    üìö Stack trace:
Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/tasks/pipeline.py", line 312, in run_pipeline
    embedding = embed_resume_text(raw_text)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/services/resume_parser.py", line 33, in embed_resume_text
    response = client.embeddings.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/resources/embeddings.py", line 129, in create
    return self._post(
           ^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/_base_client.py", line 1242, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/openai/_base_client.py", line 1037, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: your_ope********here. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/utils/debug_utils.py", line 129, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/tasks/pipeline.py", line 547, in run_pipeline
    logger.error(f"‚ùå Pipeline failed: {str(e)}", exc_info=True)
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/loguru/_logger.py", line 2090, in error
    __self._log("ERROR", False, __self._options, __message, args, kwargs)
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/venv/lib/python3.11/site-packages/loguru/_logger.py", line 2055, in _log
    log_record["message"] = message.format(*args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyError: "'error'"

2025-06-10T19:44:44.918535-0500 | ERROR | ‚ùå HTTP ERROR: POST /api/v1/pipeline/start
2025-06-10T19:44:44.918621-0500 | ERROR |    ‚è±Ô∏è Time: 0.389s
2025-06-10T19:44:44.918669-0500 | ERROR |    üí• Error: "'error'"
2025-06-10T19:44:44.918712-0500 | ERROR |    üÜî Checkpoint: checkpoint_194444530
2025-06-10T19:47:59.091658-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:48:56.980442-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:49:04.412339-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:49:25.698429-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:49:26.909974-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:49:27.801538-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:49:46.455380-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:50:09.778800-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:51:45.846037-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:52:51.175523-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:56:16.272126-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T19:56:17.568588-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:00:56.347348-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:01:05.399166-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:04:28.780073-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:04:35.094092-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:08:42.400374-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:09:03.301312-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:09:05.909570-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:09:16.712537-0500 | ERROR | ‚ùå Database connection failed: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:09:16.712655-0500 | ERROR | ‚ùå Cannot fetch URLs: Database connection failed
2025-06-10T20:09:17.017906-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:09:17.017969-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:09:17.018324-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:09:19.201797-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:09:19.201882-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:09:19.202359-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:09:21.389043-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:09:21.389129-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:09:21.389563-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:09:23.523976-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:09:23.524031-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:09:23.524324-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:09:25.637843-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:09:25.637918-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:09:25.638274-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:09:27.770716-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:09:27.770820-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:09:27.771397-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:09:29.966053-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:09:29.966117-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:09:29.966454-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:09:32.180641-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:09:32.180704-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:09:32.180996-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:09:34.305927-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:09:34.306047-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:09:34.306673-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:09:36.428135-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:09:36.428183-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:09:36.428467-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:10:50.439945-0500 | ERROR | ‚ùå Database connection failed: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:10:50.441236-0500 | ERROR | ‚ùå Cannot fetch URLs: Database connection failed
2025-06-10T20:10:50.560190-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:10:50.560325-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:10:50.561008-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:10:52.804374-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:10:52.804468-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:10:52.805017-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:10:55.060740-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:10:55.060795-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:10:55.061085-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:10:57.232105-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:10:57.232445-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:10:57.233696-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:10:59.361974-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:10:59.362024-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:10:59.362294-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:11:01.479331-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:11:01.479481-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:11:01.480219-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:11:03.600224-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:11:03.600280-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:11:03.600552-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:11:05.803519-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:11:05.803580-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:11:05.804029-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:11:08.009769-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:11:08.009826-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:11:08.010265-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:11:10.265394-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:11:10.266151-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:11:10.266434-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:11:40.930059-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:13:43.911548-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:15:09.065364-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:16:57.434308-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:17:35.093514-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:17:37.702341-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:17:47.429235-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:18:57.143942-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:19:01.576351-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:20:04.522746-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:20:14.518719-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:20:18.645382-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:20:30.696874-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:20:54.787647-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:21:06.368355-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:21:15.659703-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:21:24.837098-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:21:30.769354-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:21:34.487232-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:21:43.359946-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:21:52.235589-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:21:55.083792-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:21:56.895088-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:21:59.229989-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:22:01.035108-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:22:14.249447-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:22:17.569121-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:38:41.140343-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:38:49.947291-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:38:50.660533-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:38:57.641079-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:47:36.306857-0500 | ERROR | ‚ùå Database connection failed on startup: Textual SQL expression 'SELECT 1' should be explicitly declared as text('SELECT 1')
2025-06-10T20:55:06.669618-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:55:06.669690-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:55:06.670021-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:55:08.848152-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:55:08.848279-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:55:08.849122-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:55:11.049994-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:55:11.050044-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:55:11.050338-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:55:13.245949-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:55:13.246006-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:55:13.246310-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:55:15.357633-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:55:15.357702-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:55:15.358083-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:55:17.492375-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:55:17.492423-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:55:17.492713-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:55:19.627317-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:55:19.627400-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:55:19.627832-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:55:21.755110-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:55:21.755163-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:55:21.755440-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:55:23.957974-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:55:23.958104-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:55:23.959108-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T20:55:26.086306-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T20:55:26.086358-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T20:55:26.086737-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:24:35.832288-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T21:24:35.832397-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T21:24:35.832858-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:24:38.045886-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T21:24:38.045945-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T21:24:38.046232-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:24:40.210803-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T21:24:40.210863-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T21:24:40.211143-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:24:42.334442-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T21:24:42.334501-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T21:24:42.334771-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:24:44.467797-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T21:24:44.467923-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T21:24:44.468482-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:24:46.652327-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T21:24:46.652386-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T21:24:46.652657-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:24:48.774735-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T21:24:48.774856-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T21:24:48.775381-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:24:50.898021-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T21:24:50.898087-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T21:24:50.898359-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:24:53.016048-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T21:24:53.016139-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T21:24:53.016622-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:24:55.231067-0500 | ERROR | ‚ùå Google API Error: Status 400
2025-06-10T21:24:55.231122-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 400,
    "message": "Request contains an invalid argument.",
    "errors": [
      {
        "message": "Request contains an invalid argument.",
        "domain": "global",
        "reason": "badRequest"
      }
    ],
    "status": "INVALID_ARGUMENT"
  }
}
...
2025-06-10T21:24:55.231411-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:29:28.398230-0500 | ERROR | ‚ùå API FAILED: app.services.job_scraper.scrape_google_jobs
2025-06-10T21:29:28.398758-0500 | ERROR |    ‚è±Ô∏è Time: 0.479s
2025-06-10T21:29:28.398811-0500 | ERROR |    üí• Error: 'Core' object has no attribute '_min_level'
2025-06-10T21:29:28.400436-0500 | ERROR |    üìö Full traceback:
Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/utils/debug_utils.py", line 182, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/services/job_scraper.py", line 373, in scrape_google_jobs
    "scraped_at": logger._core.levels[logger._core._min_level].name,
                                      ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Core' object has no attribute '_min_level'

2025-06-10T21:29:28.400630-0500 | ERROR | ‚ùå Search attempt 1 failed: 'Core' object has no attribute '_min_level'
2025-06-10T21:29:28.587938-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:29:28.588016-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:29:28.588330-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:29:30.709074-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:29:30.709137-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:29:30.709441-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:29:33.230217-0500 | ERROR | ‚ùå API FAILED: app.services.job_scraper.scrape_google_jobs
2025-06-10T21:29:33.230260-0500 | ERROR |    ‚è±Ô∏è Time: 0.515s
2025-06-10T21:29:33.230300-0500 | ERROR |    üí• Error: 'Core' object has no attribute '_min_level'
2025-06-10T21:29:33.230555-0500 | ERROR |    üìö Full traceback:
Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/utils/debug_utils.py", line 182, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/services/job_scraper.py", line 373, in scrape_google_jobs
    "scraped_at": logger._core.levels[logger._core._min_level].name,
                                      ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Core' object has no attribute '_min_level'

2025-06-10T21:29:33.230614-0500 | ERROR | ‚ùå Search attempt 4 failed: 'Core' object has no attribute '_min_level'
2025-06-10T21:29:33.947169-0500 | ERROR | ‚ùå API FAILED: app.services.job_scraper.scrape_google_jobs
2025-06-10T21:29:33.947231-0500 | ERROR |    ‚è±Ô∏è Time: 0.716s
2025-06-10T21:29:33.947285-0500 | ERROR |    üí• Error: 'Core' object has no attribute '_min_level'
2025-06-10T21:29:33.947695-0500 | ERROR |    üìö Full traceback:
Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/utils/debug_utils.py", line 182, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/services/job_scraper.py", line 373, in scrape_google_jobs
    "scraped_at": logger._core.levels[logger._core._min_level].name,
                                      ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Core' object has no attribute '_min_level'

2025-06-10T21:29:33.947782-0500 | ERROR | ‚ùå Search attempt 5 failed: 'Core' object has no attribute '_min_level'
2025-06-10T21:29:34.154749-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:29:34.154795-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:29:34.155072-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:29:36.410783-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:29:36.410836-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:29:36.411134-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:29:39.066090-0500 | ERROR | ‚ùå API FAILED: app.services.job_scraper.scrape_google_jobs
2025-06-10T21:29:39.066159-0500 | ERROR |    ‚è±Ô∏è Time: 0.649s
2025-06-10T21:29:39.066219-0500 | ERROR |    üí• Error: 'Core' object has no attribute '_min_level'
2025-06-10T21:29:39.066647-0500 | ERROR |    üìö Full traceback:
Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/utils/debug_utils.py", line 182, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/services/job_scraper.py", line 373, in scrape_google_jobs
    "scraped_at": logger._core.levels[logger._core._min_level].name,
                                      ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Core' object has no attribute '_min_level'

2025-06-10T21:29:39.066761-0500 | ERROR | ‚ùå Search attempt 8 failed: 'Core' object has no attribute '_min_level'
2025-06-10T21:29:39.179569-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:29:39.179620-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:29:39.179909-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:29:41.301558-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:29:41.301628-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:29:41.301992-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:30:34.087191-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:30:34.087377-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:30:34.088187-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:30:36.259744-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:30:36.259800-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:30:36.260111-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:30:38.826630-0500 | ERROR | ‚ùå API FAILED: app.services.job_scraper.scrape_google_jobs
2025-06-10T21:30:38.826699-0500 | ERROR |    ‚è±Ô∏è Time: 0.560s
2025-06-10T21:30:38.826756-0500 | ERROR |    üí• Error: 'Core' object has no attribute '_min_level'
2025-06-10T21:30:38.828360-0500 | ERROR |    üìö Full traceback:
Traceback (most recent call last):
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/utils/debug_utils.py", line 182, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/macbookpro/M4_Projects/AIEngineer/ai_job_app/app/services/job_scraper.py", line 373, in scrape_google_jobs
    "scraped_at": logger._core.levels[logger._core._min_level].name,
                                      ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Core' object has no attribute '_min_level'

2025-06-10T21:30:38.828481-0500 | ERROR | ‚ùå Search attempt 3 failed: 'Core' object has no attribute '_min_level'
2025-06-10T21:30:38.943499-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:30:38.943800-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:30:38.946022-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:30:41.063815-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:30:41.063869-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:30:41.064151-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:30:43.240984-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:30:43.241773-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:30:43.244157-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:30:45.459280-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:30:45.459351-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:30:45.459752-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:30:47.707803-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:30:47.707856-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:30:47.708134-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:30:49.835144-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:30:49.835965-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:30:49.837540-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:30:52.009278-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:30:52.009339-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:30:52.009654-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:33:56.867078-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:33:56.867161-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:33:56.867764-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:35:17.443170-0500 | ERROR | ‚ùå HTTP ERROR: GET /debug/test-job-search
2025-06-10T21:35:17.443521-0500 | ERROR |    ‚è±Ô∏è Time: 0.001s
2025-06-10T21:35:17.443648-0500 | ERROR |    üí• Error: name 'is_debug_mode' is not defined
2025-06-10T21:35:17.443708-0500 | ERROR |    üÜî Checkpoint: checkpoint_213517442
2025-06-10T21:36:51.416837-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:36:51.417148-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:36:51.417833-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:37:41.344108-0500 | ERROR | ‚ùå Failed to parse selector map: Expecting value: line 1 column 1 (char 0)
2025-06-10T21:38:38.154180-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:38:38.154329-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:38:38.155462-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:39:25.843974-0500 | ERROR | ‚ùå Failed to parse selector map: Expecting value: line 1 column 1 (char 0)
2025-06-10T21:44:19.284623-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:44:19.285570-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:44:19.286078-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:48:34.236217-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T21:48:34.236297-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T21:48:34.236747-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T21:55:24.744326-0500 | ERROR | ‚ùå FAILED: Form filling (124.673s)
2025-06-10T21:55:24.745260-0500 | ERROR |    üí• Error: Page.screenshot: Target page, context or browser has been closed
2025-06-10T21:55:24.745787-0500 | ERROR | ‚ùå Pipeline failed: Page.screenshot: Target page, context or browser has been closed
2025-06-10T22:19:53.710572-0500 | ERROR | ‚ùå Google API Error: Status 429
2025-06-10T22:19:53.711720-0500 | ERROR |    üìÑ Response: {
  "error": {
    "code": 429,
    "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
    "errors": [
      {
        "message": "Quota exceeded for quota metric 'Queries' and limit 'Queries per day' of service 'customsearch.googleapis.com' for consumer 'project_number:877036365087'.",
        "domain": "global",
        "reason": "rateLimitExceeded"
      }
    ],
    "status":...
2025-06-10T22:19:53.712808-0500 | ERROR | ‚ùå Failed to get search results from Google API
2025-06-10T22:47:21.306823-0500 | ERROR | ‚ùå No results from enhanced search
2025-06-10T22:50:07.337651-0500 | ERROR | ‚ùå No results from enhanced search
2025-06-10T22:53:50.987363-0500 | ERROR | ‚ùå Failed to parse selector map: Expecting value: line 1 column 1 (char 0)
2025-06-10T22:53:50.987814-0500 | ERROR | üîç Problematic selector_map content: To extract the input fields and their corresponding CSS selectors from the given HTML, we need to parse the HTML content and identify the input elements. However, the provided HTML snippet seems to be incomplete and does not contain any input fields. 

If there were input fields, the process would involve:

1. Parsing the HTML to locate all `<input>` elements.
2. Extracting the `name` attribute from each input element to use as the key in the JSON object.
3. Constructing a CSS selector for each input element, which could be based on attributes like `id`, `class`, or `name`.

Since the HTML provided does not include any input fields, I cannot generate the JSON mapping as requested. If you have a complete HTML document or specific sections with input fields, please provide them, and I can help extract the necessary information.
2025-06-10T23:16:16.621308-0500 | ERROR | ‚ùå Error while applying to Sr. Software Development Engineer in Test (SDET) - Chicago, IL ...: Selector map parse error: Expecting value: line 1 column 1 (char 0)
2025-06-10T23:16:45.879719-0500 | ERROR | ‚ùå Error while applying to Arrow International, Inc. hiring Software Development Engineer in ...: Selector map parse error: Expecting value: line 1 column 1 (char 0)
2025-06-10T23:17:16.428039-0500 | ERROR | ‚ùå Error while applying to Global Business Ser. 4u hiring SDET Automation tester in Chicago ...: Selector map parse error: Expecting value: line 1 column 1 (char 0)
2025-06-10T23:34:20.128475-0500 | ERROR | ‚ùå Job analysis failed: asyncio.run() cannot be called from a running event loop
2025-06-10T23:34:42.072692-0500 | ERROR | ‚ùå FAILED: Enhanced resume tailoring (14.858s)
2025-06-10T23:34:42.072927-0500 | ERROR |    üí• Error: cannot access local variable 'tailored_resume' where it is not associated with a value
2025-06-10T23:34:42.073045-0500 | ERROR | ‚ùå Enhanced Pipeline V5 failed: cannot access local variable 'tailored_resume' where it is not associated with a value
2025-06-10T23:40:56.442699-0500 | ERROR | ‚ùå Job analysis failed: asyncio.run() cannot be called from a running event loop
2025-06-10T23:41:16.012220-0500 | ERROR | ‚ùå FAILED: Enhanced resume tailoring (15.360s)
2025-06-10T23:41:16.012339-0500 | ERROR |    üí• Error: cannot access local variable 'tailored_resume' where it is not associated with a value
2025-06-10T23:41:16.012602-0500 | ERROR | ‚ùå Enhanced Pipeline V5 failed: cannot access local variable 'tailored_resume' where it is not associated with a value
2025-06-10T23:49:54.855609-0500 | ERROR | ‚ùå Job analysis failed: asyncio.run() cannot be called from a running event loop
2025-06-10T23:50:14.156875-0500 | ERROR | ‚ùå FAILED: Enhanced form field mapping (0.000s)
2025-06-10T23:50:14.157129-0500 | ERROR |    üí• Error: It looks like you are using Playwright Sync API inside the asyncio loop.
Please use the Async API instead.
2025-06-10T23:50:14.157323-0500 | ERROR | ‚ùå Enhanced Pipeline V5 failed: It looks like you are using Playwright Sync API inside the asyncio loop.
Please use the Async API instead.
2025-06-10T23:52:13.968884-0500 | ERROR | ‚ùå Job analysis failed: asyncio.run() cannot be called from a running event loop
2025-06-10T23:55:51.892267-0500 | ERROR | ‚ùå Job analysis failed: asyncio.run() cannot be called from a running event loop
2025-06-11T14:24:36.101626-0500 | CRITICAL | ‚ùå Application startup failed: 'NoneType' object has no attribute 'items'
2025-06-11T14:24:39.956400-0500 | CRITICAL | ‚ùå Application startup failed: 'NoneType' object has no attribute 'items'
2025-06-11T14:25:31.349631-0500 | CRITICAL | ‚ùå Application startup failed: 'NoneType' object has no attribute 'items'
2025-06-11T14:28:45.355428-0500 | CRITICAL | ‚ùå Application startup failed: 'used_mb'
2025-06-11T14:29:00.030710-0500 | CRITICAL | ‚ùå Application startup failed: 'used_mb'
2025-06-11T14:29:01.811076-0500 | CRITICAL | ‚ùå Application startup failed: 'used_mb'
2025-06-11T14:29:12.023641-0500 | CRITICAL | ‚ùå Application startup failed: 'used_mb'
2025-06-11T14:29:48.356233-0500 | CRITICAL | ‚ùå Application startup failed: 'used_mb'
2025-06-11T14:38:08.639252-0500 | ERROR | ‚ùå Failed to parse selector map: Expecting value: line 1 column 1 (char 0)
2025-06-11T14:38:08.639751-0500 | ERROR | üîç Problematic selector_map content: The provided HTML does not contain any input fields. Therefore, the JSON mapping for all input fields is an empty object: `{}`.
2025-06-11T14:38:44.196038-0500 | ERROR | Failed to fill full_name: fill error: Page.fill: Timeout 30000ms exceeded.
Call log:
  - waiting for locator("input[name='name']")

2025-06-11T14:39:14.204216-0500 | ERROR | Failed to fill email: fill error: Page.fill: Timeout 30000ms exceeded.
Call log:
  - waiting for locator("input[name='email']")

2025-06-11T14:39:44.223759-0500 | ERROR | Failed to fill phone: fill error: Page.fill: Timeout 30000ms exceeded.
Call log:
  - waiting for locator("input[name='phone']")

2025-06-11T14:40:14.245307-0500 | ERROR | Failed to upload resume for resume_upload: upload error: Page.set_input_files: Timeout 30000ms exceeded.
Call log:
  - waiting for locator("input[type='file']")

